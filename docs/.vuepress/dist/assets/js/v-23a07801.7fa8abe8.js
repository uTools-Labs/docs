"use strict";(self.webpackChunkuTools=self.webpackChunkuTools||[]).push([[695],{5660:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-23a07801",path:"/developer/template.html",title:"模板插件",lang:"zh",frontmatter:{},excerpt:"",headers:[{level:2,title:"plugin.json 文件",slug:"plugin-json-文件",children:[]},{level:2,title:"preload.js 文件",slug:"preload-js-文件",children:[{level:3,title:"无 UI 模式",slug:"无-ui-模式",children:[]},{level:3,title:"列表模式",slug:"列表模式",children:[]},{level:3,title:"文档模式",slug:"文档模式",children:[]}]},{level:2,title:"示例项目",slug:"示例项目",children:[{level:3,title:"无 UI + 列表模式",slug:"无-ui-列表模式",children:[]},{level:3,title:"文档模式",slug:"文档模式-1",children:[]}]},{level:2,title:"UI 展示",slug:"ui-展示",children:[]}],filePathRelative:"developer/template.md"}},221:(n,s,a)=>{a.r(s),a.d(s,{default:()=>_});var p=a(6252);const e=(0,p.uE)('<h1 id="模板插件" tabindex="-1"><a class="header-anchor" href="#模板插件" aria-hidden="true">#</a> 模板插件</h1><p>uTools 的插件开发给予了开发者最大的自由度，你可以随心所欲的设计页面结构、样式、交互，对于特别擅长前端开发的同学，这没有什么问题，但对于非前端开发者，要做出漂亮的、高质量的前端 UI 是一件困难的事情。</p><p>我们发现在 uTools 使用环境中，很多插件的场景都有其共性，所以我们抽象出一套体验统一、高质量、高性能的通用模版，如果你想开发的插件场景适合使用此模版，那么你只需提供数据并提供一些回调函数即可。</p><h2 id="plugin-json-文件" tabindex="-1"><a class="header-anchor" href="#plugin-json-文件" aria-hidden="true">#</a> plugin.json 文件</h2><p>要使用 uTools 模版，首先第一步就是删除 <code>plugin.json</code> 文件中的 <code>main</code> 属性。</p><p><s><code>&quot;main&quot;: &quot;index.html&quot;</code></s></p><h2 id="preload-js-文件" tabindex="-1"><a class="header-anchor" href="#preload-js-文件" aria-hidden="true">#</a> preload.js 文件</h2><p>你可以在 <code>preload.js</code> 文件中增加一段代码，这段代码通过为 <code>window</code> 对象添加 <code>exports</code> 属性的方式来实现模版插件功能， <code>exports</code> 对象用于描述插件的模版模式，以及为模版行为设置回调。</p><h3 id="无-ui-模式" tabindex="-1"><a class="header-anchor" href="#无-ui-模式" aria-hidden="true">#</a> 无 UI 模式</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n   <span class="token string">&quot;features.code&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 注意：键对应的是 plugin.json 中的 features.code</span>\n      mode<span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 用于无需 UI 显示，执行一些简单的代码</span>\n      args<span class="token operator">:</span> <span class="token punctuation">{</span>\n         <span class="token comment">// 进入插件时调用</span>\n         <span class="token function-variable function">enter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token comment">// action = { code, type, payload }</span>\n            window<span class="token punctuation">.</span>utools<span class="token punctuation">.</span><span class="token function">hideMainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token comment">// do some thing</span>\n            window<span class="token punctuation">.</span>utools<span class="token punctuation">.</span><span class="token function">outPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n         <span class="token punctuation">}</span>  \n      <span class="token punctuation">}</span> \n   <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="列表模式" tabindex="-1"><a class="header-anchor" href="#列表模式" aria-hidden="true">#</a> 列表模式</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n   <span class="token string">&quot;features.code&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 注意：键对应的是 plugin.json 中的 features.code</span>\n      mode<span class="token operator">:</span> <span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 列表模式</span>\n      args<span class="token operator">:</span> <span class="token punctuation">{</span>\n         <span class="token comment">// 进入插件时调用（可选）</span>\n         <span class="token function-variable function">enter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> callbackSetList</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 如果进入插件就要显示列表数据</span>\n            <span class="token function">callbackSetList</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n                  <span class="token punctuation">{</span>\n                     title<span class="token operator">:</span> <span class="token string">&#39;这是标题&#39;</span><span class="token punctuation">,</span>\n                     description<span class="token operator">:</span> <span class="token string">&#39;这是描述&#39;</span><span class="token punctuation">,</span>\n                     icon<span class="token operator">:</span><span class="token string">&#39;&#39;</span> <span class="token comment">// 图标(可选)</span>\n                  <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span><span class="token punctuation">)</span>\n         <span class="token punctuation">}</span><span class="token punctuation">,</span>\n         <span class="token comment">// 子输入框内容变化时被调用 可选 (未设置则无搜索)</span>\n         <span class="token function-variable function">search</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> searchWord<span class="token punctuation">,</span> callbackSetList</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 获取一些数据</span>\n            <span class="token comment">// 执行 callbackSetList 显示出来</span>\n            <span class="token function">callbackSetList</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n               <span class="token punctuation">{</span>\n                  title<span class="token operator">:</span> <span class="token string">&#39;这是标题&#39;</span><span class="token punctuation">,</span>\n                  description<span class="token operator">:</span> <span class="token string">&#39;这是描述&#39;</span><span class="token punctuation">,</span>\n                  icon<span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 图标</span>\n                  url<span class="token operator">:</span> <span class="token string">&#39;https://yuanliao.info&#39;</span>\n               <span class="token punctuation">}</span>\n            <span class="token punctuation">]</span><span class="token punctuation">)</span>\n         <span class="token punctuation">}</span><span class="token punctuation">,</span>\n         <span class="token comment">// 用户选择列表中某个条目时被调用</span>\n         <span class="token function-variable function">select</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">action<span class="token punctuation">,</span> itemData<span class="token punctuation">,</span> callbackSetList</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            window<span class="token punctuation">.</span>utools<span class="token punctuation">.</span><span class="token function">hideMainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token keyword">const</span> url <span class="token operator">=</span> itemData<span class="token punctuation">.</span>url\n            <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shell<span class="token punctuation">.</span><span class="token function">openExternal</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>\n            window<span class="token punctuation">.</span>utools<span class="token punctuation">.</span><span class="token function">outPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n         <span class="token punctuation">}</span><span class="token punctuation">,</span>\n         <span class="token comment">// 子输入框为空时的占位符，默认为字符串&quot;搜索&quot;</span>\n         placeholder<span class="token operator">:</span> <span class="token string">&quot;搜索&quot;</span>\n      <span class="token punctuation">}</span> \n   <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="文档模式" tabindex="-1"><a class="header-anchor" href="#文档模式" aria-hidden="true">#</a> 文档模式</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n   <span class="token string">&quot;features.code&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 注意：键对应的是 plugin.json 中的 features.code</span>\n      mode<span class="token operator">:</span> <span class="token string">&quot;doc&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 文档模式</span>\n      args<span class="token operator">:</span> <span class="token punctuation">{</span>\n         <span class="token comment">// 索引集合</span>\n         <span class="token comment">// indexes: require(&#39;./indexes.json&#39;)</span>\n         indexes<span class="token operator">:</span><span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n               t<span class="token operator">:</span> <span class="token string">&#39;这是标题&#39;</span><span class="token punctuation">,</span>\n               d<span class="token operator">:</span> <span class="token string">&#39;这是描述&#39;</span><span class="token punctuation">,</span>\n               p<span class="token operator">:</span> <span class="token string">&#39;doc/xxx.html&#39;</span> <span class="token comment">//页面, 只能是相对路径</span>\n            <span class="token punctuation">}</span>\n         <span class="token punctuation">]</span><span class="token punctuation">,</span>\n         <span class="token comment">// 子输入框为空时的占位符，默认为字符串&quot;搜索&quot;</span>\n         placeholder<span class="token operator">:</span> <span class="token string">&quot;搜索&quot;</span>\n      <span class="token punctuation">}</span>\n   <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="示例项目" tabindex="-1"><a class="header-anchor" href="#示例项目" aria-hidden="true">#</a> 示例项目</h2><h3 id="无-ui-列表模式" tabindex="-1"><a class="header-anchor" href="#无-ui-列表模式" aria-hidden="true">#</a> 无 UI + 列表模式</h3>',16),t=(0,p.Uk)("Chrome 小助手 "),o={href:"https://github.com/in3102/utools-chrome_helper",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Uk)("https://github.com/in3102/utools-chrome_helper"),c=(0,p._)("h3",{id:"文档模式-1",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#文档模式-1","aria-hidden":"true"},"#"),(0,p.Uk)(" 文档模式")],-1),u=(0,p.Uk)("MDN 文档（包含 JavaScript、Html、CSS、Web API/DOM、HTTP） "),r={href:"https://github.com/in3102/utools-mdn-doc",target:"_blank",rel:"noopener noreferrer"},i=(0,p.Uk)("https://github.com/in3102/utools-mdn-doc"),k=(0,p.Uk)("Python 文档 "),b={href:"https://github.com/in3102/utools-python-doc",target:"_blank",rel:"noopener noreferrer"},m=(0,p.Uk)("https://github.com/in3102/utools-python-doc"),d=(0,p.Uk)("Linux 命令文档 "),h={href:"https://github.com/in3102/utools-linux-doc",target:"_blank",rel:"noopener noreferrer"},g=(0,p.Uk)("https://github.com/in3102/utools-linux-doc"),f=(0,p.Uk)("PHP 文档 "),v={href:"https://github.com/in3102/utools-php-doc",target:"_blank",rel:"noopener noreferrer"},x=(0,p.Uk)("https://github.com/in3102/utools-php-doc"),q=(0,p._)("h2",{id:"ui-展示",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#ui-展示","aria-hidden":"true"},"#"),(0,p.Uk)(" UI 展示")],-1),j=(0,p._)("p",null,[(0,p._)("img",{src:"https://res.u-tools.cn/website/docs.png",alt:"docs.png"})],-1),_={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[e,(0,p._)("ul",null,[(0,p._)("li",null,[t,(0,p._)("a",o,[l,(0,p.Wm)(a)])])]),c,(0,p._)("ul",null,[(0,p._)("li",null,[u,(0,p._)("a",r,[i,(0,p.Wm)(a)])]),(0,p._)("li",null,[k,(0,p._)("a",b,[m,(0,p.Wm)(a)])]),(0,p._)("li",null,[d,(0,p._)("a",h,[g,(0,p.Wm)(a)])]),(0,p._)("li",null,[f,(0,p._)("a",v,[x,(0,p.Wm)(a)])])]),q,j],64)}}}}]);